public class Solution {
	public ArrayList<Integer> maxone(ArrayList<Integer> A, int B) {
	    
	    ArrayList<Integer> zeroPos = new ArrayList<>();
	    ArrayList<Integer> res = new ArrayList<>();
	    
	    if (A == null)
	        return res;
	    
	    int n = A.size();
	    
	    for (int i = 0; i < n ; i++) {
	        int num = A.get(i);
	        if (num == 0)
	            zeroPos.add(i);
	    }
	    
	    if (B >= zeroPos.size()) {
	        for (int i = 0; i < n; i++)
	            res.add(i);
	        return res;
	    }
	    
	    int i = 0;
	    int j = B;
	    int maxSize = 0;
	    int start, end;
	    start = 0;
	    
	    while (j <= zeroPos.size()) {
	        
	        if (j == zeroPos.size())
    	        end = n - 1;
    	    else
    	        end = zeroPos.get(j) - 1;
	        
	        int size = end - start + 1;
	        
	        if (size > maxSize) {
	            maxSize = size;
	            res.clear();
	            res.add(start);
	            res.add(end);
	        }
	        
	        if (j == zeroPos.size())
	            break;
	        
	        start = zeroPos.get(i) + 1;
	        i++;
	        j++;
	    }
	    
	    
	    start = res.get(0);
	    end = res.get(1);
	    
	    res.clear();
	    
	    for (i = start; i <= end; i++)
	        res.add(i);
	    
	    return res;
	    
	}
}
