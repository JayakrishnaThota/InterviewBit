//O(n) and O(1)
public class Solution {
    public ArrayList<Integer> maxone(ArrayList<Integer> a, int b) {
        ArrayList<Integer> result = new ArrayList<>();
        if (a==null || a.size() == 0 ) {
            return result;
        }
        int left = 0; // start index of current window
        int count = 0; // number of zeros in current window
        int start = -1;
        int end = -1;
        for (int right = 0; right < a.size(); right++) {
            if (a.get(right) == 0) {
                count++;
            }
            if (count > b) {
                for (int j = left; j <= right; j++) {
                    if (a.get(j) == 0) {
                        count--;
                        left = j + 1;
                        break;
                    }
                }
            } else {
                // update global result
                if (right - left + 1 > (end-start+1)) {
                    start = left;
                    end = right;
                }
            }
        }
        if (start != -1) {
            for (int i = start; i <= end; i++) {
                result.add(i);
            }
        }
        return result;
    }
}
