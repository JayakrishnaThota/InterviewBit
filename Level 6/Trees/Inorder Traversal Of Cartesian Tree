//O(n2) time and O(n) space
public class Solution {
    public TreeNode buildTree(ArrayList<Integer> a) {
        if(a==null) return null;
        return helper(a,0,a.size()-1);
    }
    public TreeNode helper(ArrayList<Integer> a, int low, int high){
        if(low>high) return null;
        if(low==high) return new TreeNode(a.get(low));
        int max = Integer.MIN_VALUE, maxindex = 0;
        for(int i=low;i<=high;i++){
            if(max<a.get(i)){
                max = a.get(i);
                maxindex = i;
            }
        }
        TreeNode root = new TreeNode(max);
        root.left = helper(a,low,maxindex-1);
        root.right = helper(a,maxindex+1,high);
        return root;
    }
}
