public class Solution {
    public int black(ArrayList<String> A) {
        if(A==null || A.size()==0) return 0;
        int m = A.size();
        int n = A.get(0).length();
        char[][] board = new char[m][n];
        for(int i=0;i<m;i++){
            String s = A.get(i);
            for(int j=0;j<n;j++){
                char c =s.charAt(j);
                board[i][j] = c;
            }
        }
        return helper(board);
    }
    public int helper(char[][] board){
        int m = board.length;
        int n = board[0].length;
        int count = 0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='X'){
                    dfs(board,i,j,m,n);
                    count++;
                }
            }
        }
        return count;
    }
    public void dfs(char[][] board, int i, int j, int m, int n){
        if(i<0 || j<0 || i==m || j==n || board[i][j]=='O') return;
        board[i][j] = 'O';
        dfs(board,i+1,j,m,n);
        dfs(board,i-1,j,m,n);
        dfs(board,i,j+1,m,n);
        dfs(board,i,j-1,m,n);
    }
}
