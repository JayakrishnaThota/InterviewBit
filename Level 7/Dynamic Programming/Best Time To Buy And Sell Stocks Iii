public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int maxProfit(final List<Integer> A) {
        int[] nums = new int[A.size()];
        for(int i=0;i<nums.length;i++)
        nums[i] = A.get(i);
        return maxProfit(nums);
    }
     public int maxProfit(int[] prices) {
        int k = 2;
        int n = prices.length;
        if(k>=n/2) return maxProfit2(prices);
        int[][] dp = new int[k+1][n];
        for(int i=1;i<=k;i++){
            int max = -prices[0];
            for(int j=1;j<n;j++){
                dp[i][j] = Math.max(dp[i][j-1], prices[j]+max);
                max = Math.max(max, dp[i-1][j-1]-prices[j]);
            }
        }
        return dp[k][n-1];
    }
     public int maxProfit2(int[] nums) {
        if(nums==null || nums.length==0) return 0;
        int max = 0;
        for(int i=1;i<nums.length;i++){
            if(nums[i]-nums[i-1]>0) max+=(nums[i]-nums[i-1]);
        }
        return max;
    }
}
