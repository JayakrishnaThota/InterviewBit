public class Solution {
    public int calculateMinimumHP(ArrayList<ArrayList<Integer>> A) {
        int[][] dungeon = new int[A.size()][A.get(0).size()];
        for(int i=0;i<dungeon.length;i++){
            for(int j=0;j<dungeon[0].length;j++){
                dungeon[i][j] = A.get(i).get(j);
            }
        }
   if(dungeon==null || dungeon.length==0 || dungeon[0].length==0) return 0;
        int m = dungeon.length;
        int n = dungeon[0].length;
        int[][] dp = new int[m][n];
        dp[m-1][n-1] = Math.max(1-dungeon[m-1][n-1],1);
        for(int i=m-2;i>=0;i--)
            dp[i][n-1] = Math.max(dp[i+1][n-1]-dungeon[i][n-1],1);
        for(int j=n-2;j>=0;j--)
            dp[m-1][j] = Math.max(dp[m-1][j+1]-dungeon[m-1][j],1);
        for(int i=m-2;i>=0;i--){
            for(int j=n-2;j>=0;j--){
                int down = Math.max(dp[i+1][j]-dungeon[i][j],1);
                int right = Math.max(dp[i][j+1]-dungeon[i][j],1);
                dp[i][j] = Math.min(down, right);
            }
        }
        return dp[0][0];
    }
}
