public class Solution {
    public int uniquePathsWithObstacles(ArrayList<ArrayList<Integer>> A) {
        int[][] obstacleGrid = new int[A.size()][A.get(0).size()];
        for(int i=0;i<obstacleGrid.length;i++){
            for(int j=0;j<obstacleGrid[0].length;j++){
                obstacleGrid[i][j] = A.get(i).get(j);
            }
        }
    if(obstacleGrid==null || obstacleGrid.length==0) return 0;
        int m = obstacleGrid.length;
        int n =obstacleGrid[0].length;
        int[][] dp = new int[m][n];
         for(int i=0;i<m;i++){
            if(obstacleGrid[i][0]!=1)
            dp[i][0] = 1;
            else 
                break;
         }
        for(int j=0;j<n;j++){
            if(obstacleGrid[0][j]!=1)
            dp[0][j] = 1;
            else
                break;
        }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                if(obstacleGrid[i][j]==1) continue;
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
}
