public class Solution {
    public int minPathSum(ArrayList<ArrayList<Integer>> A) {
        int[][] grid = new int[A.size()][A.get(0).size()];
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                grid[i][j] = A.get(i).get(j);
            }
        }
        if(grid==null || grid.length==0) return 0;
        int m = grid.length;
        int n = grid[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(i==0 && j==0)
                    continue;
                else if(i==0)
                    grid[i][j]+=grid[i][j-1];
                else if(j==0)
                    grid[i][j]+=grid[i-1][j];
                else
                    grid[i][j] = grid[i][j]+Math.min(grid[i-1][j], grid[i][j-1]);
            }
        }
        return grid[m-1][n-1];
    }
}
