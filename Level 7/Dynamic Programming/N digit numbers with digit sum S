public class Solution {
    int[][] lookup;
    public int solve(int n, int sum) {
        lookup = new int[n+1][sum+1];
        return finalCount(n,sum)%1000000007;
    }
     public int countRec(int n, int sum)
    {
        if (n == 0)
           return sum == 0 ? 1 : 0;
        if (lookup[n][sum] != -1)
           return lookup[n][sum];
        int ans = 0;
        for (int i=0; i<10; i++)
           if (sum-i >= 0){
              ans += countRec(n-1, sum-i);
              ans%=1000000007;
           }
        ans%=1000000007;
        return lookup[n][sum] = ans;
    }

    public int finalCount(int n, int sum)
    {
        for(int i = 0;i<=n;++i){
            for(int j=0;j<=sum;++j){
                lookup[i][j] = -1;
            }
        }
        int ans = 0;
        for (int i = 1; i <= 9; i++)
          if (sum-i >= 0){
             ans += countRec(n-1, sum-i);
             ans%=1000000007;
          }
          ans%=1000000007;
        return ans;
    }
 
}
